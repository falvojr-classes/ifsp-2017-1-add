/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.ifsp.view;

import br.edu.ifsp.controller.PessoaController;
import br.edu.ifsp.model.Pessoa;
import br.edu.ifsp.model.PessoaFisica;
import br.edu.ifsp.model.PessoaJuridica;
import br.edu.ifsp.model.Usuario;
import br.edu.ifsp.util.ExcecaoNegocial;
import br.edu.ifsp.util.Mensagens;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import org.joda.time.DateTime;

/**
 *
 * @author falvojr
 */
public class HomeJFrame extends javax.swing.JFrame {

    private final Usuario usuarioLogado;
    private PessoaTableModel tableModel;
    
    /**
     * Creates new form HomeJFrame
     */
    public HomeJFrame(Usuario usuarioLogado) {
        this.usuarioLogado = usuarioLogado;
        initComponents();
        initMyComponents();
    }
    
    private void initMyComponents() {
        super.setTitle(String.format("Home (%s)", usuarioLogado.getLogin()));     
        this.atualizarTabela();
        tblPessoas.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent event) {
                final int selectedRow = tblPessoas.getSelectedRow();
                // Condic√£o necessaria para evitar click duplo.
                if (!event.getValueIsAdjusting() && selectedRow != -1) {
                    limparCampos();
                    int row = tblPessoas.convertRowIndexToModel(selectedRow);
                    Pessoa pessoa = tableModel.getRegistros().get(row);
                    txtId.setText(pessoa.getId().toString());
                    txtNome.setText(pessoa.getNome());
                    txtEmail.setText(pessoa.getEmail());
                    txtTelefone.setText(pessoa.getTelefone());
                    chkAtivo.setSelected(pessoa.isAtivo());
                    if (pessoa instanceof PessoaFisica) {
                        txtCpf.setText(((PessoaFisica) pessoa).getCpf());
                        final DateTime data = ((PessoaFisica) pessoa).getDataNascimento();
                        txtDataNascimento.setDate(new Date(data.getMillis()));
                        pnlPfPj.setSelectedIndex(0);
                    } else {
                        txtCnpj.setText(((PessoaJuridica) pessoa).getCnpj());
                        txtIe.setText(((PessoaJuridica) pessoa).getInscricaoEstadual());
                        pnlPfPj.setSelectedIndex(1);
                    }
                    btnExcluir.setEnabled(true);
                }
            }
        });
    }
    
    private void limparCampos() {
        txtId.setText("");
        txtNome.setText("");
        txtEmail.setText("");
        txtTelefone.setText("");
        txtCpf.setText("");
        txtDataNascimento.setDate(null);
        txtCnpj.setText("");
        txtIe.setText("");
        pnlPfPj.setSelectedIndex(0);
    }
    
    private void atualizarTabela() {
        List<Pessoa> pessoas = PessoaController.getInstancia().listar(null);
        atualizarTabela(pessoas);
    }

    private void atualizarTabela(List<Pessoa> pessoas) {
        if (tableModel == null) {
            // Intanciando (1 vez)
            tableModel = new PessoaTableModel(pessoas);
            tblPessoas.setModel(tableModel); 
        } else {
            // Atualizando (demais vezes)
            tableModel.setRegistros(pessoas);
            tableModel.fireTableDataChanged();
        }  
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlPessoa = new javax.swing.JPanel();
        chkAtivo = new javax.swing.JCheckBox();
        pnlPfPj = new javax.swing.JTabbedPane();
        pnlPf = new javax.swing.JPanel();
        lblCpf = new javax.swing.JLabel();
        txtCpf = new javax.swing.JFormattedTextField();
        txtDataNascimento = new com.toedter.calendar.JDateChooser();
        lblNascimento = new javax.swing.JLabel();
        pnlPj = new javax.swing.JPanel();
        lblCnpj = new javax.swing.JLabel();
        txtCnpj = new javax.swing.JFormattedTextField();
        lblIe = new javax.swing.JLabel();
        txtIe = new javax.swing.JFormattedTextField();
        lblNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblTelefone = new javax.swing.JLabel();
        txtTelefone = new javax.swing.JFormattedTextField();
        btnSalvar = new javax.swing.JButton();
        txtId = new javax.swing.JTextField();
        lblId = new javax.swing.JLabel();
        btnLimpar = new javax.swing.JButton();
        pnlPessoas = new javax.swing.JScrollPane();
        tblPessoas = new javax.swing.JTable();
        btnExcluir = new javax.swing.JButton();
        btnExportar = new javax.swing.JButton();
        txtFiltro = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Home");

        pnlPessoa.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados do Contato"));

        chkAtivo.setSelected(true);
        chkAtivo.setText("Ativo?");

        lblCpf.setText("CPF*:");

        try {
            txtCpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        txtDataNascimento.setDateFormatString("dd/MM/yyyy");

        lblNascimento.setText("Nascimento:");

        javax.swing.GroupLayout pnlPfLayout = new javax.swing.GroupLayout(pnlPf);
        pnlPf.setLayout(pnlPfLayout);
        pnlPfLayout.setHorizontalGroup(
            pnlPfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPfLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNascimento)
                    .addComponent(lblCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDataNascimento, javax.swing.GroupLayout.DEFAULT_SIZE, 417, Short.MAX_VALUE)
                    .addComponent(txtCpf))
                .addContainerGap())
        );
        pnlPfLayout.setVerticalGroup(
            pnlPfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPfLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblCpf)
                    .addComponent(txtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblNascimento)
                    .addComponent(txtDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlPfPj.addTab("Pessoa Fisica", pnlPf);

        lblCnpj.setText("CNPJ*:");

        try {
            txtCnpj.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##.###.###/####-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        lblIe.setText("IE:");

        try {
            txtIe.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###.###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout pnlPjLayout = new javax.swing.GroupLayout(pnlPj);
        pnlPj.setLayout(pnlPjLayout);
        pnlPjLayout.setHorizontalGroup(
            pnlPjLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPjLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPjLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCnpj)
                    .addComponent(lblIe))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPjLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtIe)
                    .addComponent(txtCnpj, javax.swing.GroupLayout.DEFAULT_SIZE, 458, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlPjLayout.setVerticalGroup(
            pnlPjLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPjLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPjLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(txtCnpj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCnpj))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPjLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblIe)
                    .addComponent(txtIe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlPfPj.addTab("Pessoa Juridica", pnlPj);

        lblNome.setText("Nome*:");

        lblEmail.setText("Email*:");

        lblTelefone.setText("Telefone*:");

        try {
            txtTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##) #####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        txtId.setEditable(false);
        txtId.setEnabled(false);

        lblId.setText("ID");

        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlPessoaLayout = new javax.swing.GroupLayout(pnlPessoa);
        pnlPessoa.setLayout(pnlPessoaLayout);
        pnlPessoaLayout.setHorizontalGroup(
            pnlPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPessoaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlPfPj)
                    .addGroup(pnlPessoaLayout.createSequentialGroup()
                        .addGroup(pnlPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblNome, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblEmail, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblTelefone, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlPessoaLayout.createSequentialGroup()
                                .addComponent(txtTelefone)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(chkAtivo))
                            .addComponent(txtEmail)
                            .addGroup(pnlPessoaLayout.createSequentialGroup()
                                .addComponent(txtNome)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblId)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPessoaLayout.createSequentialGroup()
                        .addComponent(btnLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pnlPessoaLayout.setVerticalGroup(
            pnlPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPessoaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNome)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmail)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTelefone)
                    .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkAtivo))
                .addGap(18, 18, 18)
                .addComponent(pnlPfPj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlPessoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar)
                    .addComponent(btnLimpar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblPessoas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        pnlPessoas.setViewportView(tblPessoas);

        btnExcluir.setText("Excluir");
        btnExcluir.setEnabled(false);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnExportar.setText("Exportar");
        btnExportar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportarActionPerformed(evt);
            }
        });

        txtFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtFiltroKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFiltroKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlPessoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlPessoas)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnExportar, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtFiltro))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlPessoas, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnExportar)
                    .addComponent(btnExcluir))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        try {
            Pessoa pessoa;
            //Preencher os dados especificos:
            boolean ehPj = pnlPfPj.getSelectedIndex() == 1;
            if (ehPj) {
                PessoaJuridica pj = new PessoaJuridica();
                pj.setCnpj(getValorCampoMascarado(txtCnpj));
                pj.setInscricaoEstadual(getValorCampoMascarado(txtIe));
                pessoa = pj;
            } else {
                PessoaFisica pf = new PessoaFisica();
                pf.setCpf(getValorCampoMascarado(txtCpf));
                pf.setDataNascimento(new DateTime(txtDataNascimento.getDate()));
                pessoa = pf;
            }
            //Preencher os dados comuns (Pessoa):
            pessoa.setEmail(txtEmail.getText());
            pessoa.setNome(txtNome.getText());
            pessoa.setTelefone(getValorCampoMascarado(txtTelefone));
            pessoa.setAtivo(chkAtivo.isSelected());
            if (txtId.getText().isEmpty()) {
                PessoaController.getInstancia().inserir(pessoa);
            } else {
                pessoa.setId(Long.valueOf(txtId.getText()));
                PessoaController.getInstancia().alterar(pessoa);
            }
            this.atualizarTabela();
            Mensagens.info(this, Mensagens.PESSOA_SUCESSO_INSERCAO);
        } catch(ExcecaoNegocial excecaoNegocial) {
            Mensagens.erro(this, excecaoNegocial);
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private String getValorCampoMascarado(JFormattedTextField campo) {
        String valor = (String) campo.getValue();
        if (valor == null) {
            valor = campo.getText();
        }
        return valor;
    }
    
    private void btnExportarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportarActionPerformed
        try {
            final List<Pessoa> dados = tableModel.getRegistros();

            final JasperReport report = JasperCompileManager.compileReport("relatorios/contatos.jrxml");
            final JasperPrint print = JasperFillManager.fillReport(report, null, new JRBeanCollectionDataSource(dados, false));
            JasperExportManager.exportReportToPdfFile(print, "relatorios/contatos.pdf");
            JOptionPane.showMessageDialog(this, Mensagens.JR_SUCESSO, "Mensagem", JOptionPane.INFORMATION_MESSAGE);
            this.abrirPdf();
        } catch (JRException | IOException jasperException) {
            Mensagens.erro(this, new ExcecaoNegocial(Mensagens.JR_ERRO, jasperException));
        }
    }//GEN-LAST:event_btnExportarActionPerformed

    private void abrirPdf() throws IOException {
        String path = System.getProperty("user.dir");
        Desktop.getDesktop().open(new File(path + "/relatorios/contatos.pdf"));
    }

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        try {
            String msg = String.format(Mensagens.PESSOA_CONFIRMAR_EXCLUSAO, txtNome.getText());
            int resposta = JOptionPane.showConfirmDialog(this, msg, "Confirmac√£o", JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                Long idPessoa = Long.parseLong(txtId.getText());
                PessoaController.getInstancia().deletar(idPessoa);
                this.atualizarTabela();
            }
        } catch(ExcecaoNegocial excecaoNegocial) {
            Mensagens.erro(this, excecaoNegocial);
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        limparCampos();
    }//GEN-LAST:event_btnLimparActionPerformed

    private void txtFiltroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroKeyPressed

    }//GEN-LAST:event_txtFiltroKeyPressed

    private void txtFiltroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroKeyReleased
        JTextField filtro = (JTextField) evt.getSource();
        List<Pessoa> pessoasFiltradas = PessoaController.getInstancia().listar(filtro.getText());
        atualizarTabela(pessoasFiltradas);
    }//GEN-LAST:event_txtFiltroKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnExportar;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JCheckBox chkAtivo;
    private javax.swing.JLabel lblCnpj;
    private javax.swing.JLabel lblCpf;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblIe;
    private javax.swing.JLabel lblNascimento;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblTelefone;
    private javax.swing.JPanel pnlPessoa;
    private javax.swing.JScrollPane pnlPessoas;
    private javax.swing.JPanel pnlPf;
    private javax.swing.JTabbedPane pnlPfPj;
    private javax.swing.JPanel pnlPj;
    private javax.swing.JTable tblPessoas;
    private javax.swing.JFormattedTextField txtCnpj;
    private javax.swing.JFormattedTextField txtCpf;
    private com.toedter.calendar.JDateChooser txtDataNascimento;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtFiltro;
    private javax.swing.JTextField txtId;
    private javax.swing.JFormattedTextField txtIe;
    private javax.swing.JTextField txtNome;
    private javax.swing.JFormattedTextField txtTelefone;
    // End of variables declaration//GEN-END:variables

}
